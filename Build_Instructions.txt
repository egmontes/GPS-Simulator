Hardware: -Arduino Uno
          -USB Cable A to B
          -10.0 microFarad capacitor
          -(If using external port)
          -Breadboard
          -DB9 Male to Female Piece
          -DB9 Male to Female Serial Cable
          -MAX232
          -4 1.0 microFarad Capacitors
          -Circuit Wires.

Software: -Arduino: IDE used to upload the code on the Aruino Uno board.
          -PuTTY: SSH that receives information serially and handles user input.
          -OpenCPN (optional): Uses the information from the Serial port to plot a path (useful for visual confirmation).

Files: -GPS-Simulator.ino: Contains all of the classes and functions necessary to communicate serially with PuTTY or any other 
                           programs. Every second, an NMEA GPRMC sentance is displayed on PuTTY with an updated time and
                           coordinate. The coordinate is updated by calculating a bearing every second based on the current
                           coordinate, speed in knots, and final coordinate. The path taken to this final coordinate is
                           calculated by using the Great Circle Distance. Once the total distance has been covered, the final
                           coordinate and start coordinates are swapped in order to traverse the path in the opposite 
                           direction. Once the path is completed 5 times in each direction, another route will begin.

Possible alterations to code: -knots: On line 125, if you want the ship to travel slower or faster, you could change the value 
                                      of "knots". Make sure to not make this value too high (i.e. >50,000) because you may 
                                      begin to see missing data points
                              -voyages: On line 126, if you want to go back and forth on the same path for a certain amount of 
                                        times, change this value.

Step 1:  Wiring
-After uploadin the code onto the Arduino, plug in the 10 microFarad capacitor FROM Reset TO GND on the Arduino Uno
-(If using external port)
-Solder one end of Wire5, Wire6, and Wire7 to Serial Piece Male 5, 3, and 2 respectively. 
-MAX232 --> The "U" shape is on the top of the device as in the figure.

             _____
          1-| |_| |-16        -Capacitor1+ TO MAX232 1      -Wire1 FROM Arduino Uno 5V Pin TO Power
          2-|     |-15        -Capacitor1- TO MAX232 3      -Wire2 FROM Arduino Uno GND TO GND  
          3-| MAX |-14        -Capacitor2+ TO MAX232 2      -Wire3 FROM Arduino Uno Pin 11 TO MAX232 11
          4-| 232 |-13        -Capacitor2- TO GND           -Wire4 FROM Arduino Uno Pin 10 TO MAX232 12
          5-|     |-12        -Capacitor3+ TO MAX232 4      -Wire5 FROM Serial Piece Male 5 TO GND
          6-|     |-11        -Capacitor3- TO MAX232 5      -Wire6 FROM Serial Piece Male 3 TO MAX232 13
          7-|     |-10        -Capacitor4+ TO GND           -Wire7 FROM Serial Piece Male 2 TO MAX232 14
          8-|_____|-9         -Capacitor4- TO MAX232 6
          
               Serial Piece Male
          _____________   _____________
          \ o o o o o /-->\ 1 2 3 4 5 /    
           \ o o o o / --> \ 6 7 8 9 / 
           
Step 2: Connections

-Connect the USB cable from the computer to the Arduino Uno
-(If using external port)
-Connect the Serial Cable Female to the computer Serial port
-Connect the Serial Cable Male to the Serial Piece Female

Step 3: Running the code

-Open up the GPS-Simulator.ino file in Arduino on the computer.
-Upload the code.
-Open up PuTTY on the computer.
-Select "Serial" on PuTTY Configuration and set the "speed" to 4800.
-Also make sure that the correct "Serial Line" is selected. COM4 is Arduino Line which requires no wiring or external port.
-Click "Open".
-(If using external port) If no text appears on PuTTY after the code is uploaded, open up the Arduino Serial monitor (make sure
 you select 4800 baud).
-Answer the two prompts on PuTTY and press "Enter" for each (Either pressing "Enter" with no answer, or waiting a minute will 
 set the default values for the date/time and the path choice).
-(Optional) 
-Close PuTTY and open OpenCPN.
-Select the correct Serial port and speed once again. 

Step 4: New Path

-To select another path instead of letting the paths cycle in order over time, close PuTTY, take out the 10.0 microFarad 
 capacitor and plug it back in. Re-open PuTTY and it will prmopt the user input once again.
-Any time you power down the Arduino, it will restart as well.
